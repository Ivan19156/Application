version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: radency_db
    environment:
      POSTGRES_DB: radency_event_db
      POSTGRES_USER: devuser
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./db-init:/docker-entrypoint-initdb.d
    ports:
      - "5433:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U devuser -d radency_event_db"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  backend:
    container_name: radency_backend
    build:
      context: .
      dockerfile: backend/WebAPI/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Host=db;Port=5432;Database=radency_event_db;Username=devuser;Password=${DB_PASSWORD}
      - JwtSettings__Secret=${JWT_SECRET}
      - JwtSettings__Issuer=${JWT_ISSUER}
      - JwtSettings__Audience=${JWT_AUDIENCE}
      - JwtSettings__ExpiryMinutes=1440
    ports:
      - "5101:8080"
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

  frontend:
    container_name: radency_frontend
    build:
      context: .
      dockerfile: frontend/Dockerfile
    ports:
      - "8080:80"
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  postgres-data: